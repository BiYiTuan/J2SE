
^\d+$　　//匹配非负整数（正整数 + 0） 
^[0-9]*[1-9][0-9]*$　　//匹配正整数 
^((-\d+)|(0+))$　　//匹配非正整数（负整数 + 0） 
^-[0-9]*[1-9][0-9]*$　　//匹配负整数 
^-?\d+$　　　　//匹配整数 
^\d+(\.\d+)?$　　//匹配非负浮点数（正浮点数 + 0） 
^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$　　//匹配正浮点数 
^((-\d+(\.\d+)?)|(0+(\.0+)?))$　　//匹配非正浮点数（负浮点数 + 0） 
^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$　　//匹配负浮点数 
^(-?\d+)(\.\d+)?$　　//匹配浮点数 
^[A-Za-z]+$　　//匹配由26个英文字母组成的字符串 
^[A-Z]+$　　//匹配由26个英文字母的大写组成的字符串 
^[a-z]+$　　//匹配由26个英文字母的小写组成的字符串 
^[A-Za-z0-9]+$　　//匹配由数字和26个英文字母组成的字符串 
^\w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串 
^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$　　　　//匹配email地址 
^[a-zA-z]+://匹配(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$　　//匹配url 

匹配中文字符的正则表达式： [\u4e00-\u9fa5] 
匹配双字节字符(包括汉字在内)：[^\x00-\xff]

应用：计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）
String.prototype.len=function(){return this.replace([^\x00-\xff]/g,"aa").length;} 

匹配空行的正则表达式：\n[\s| ]*\r 
匹配HTML标记的正则表达式：/<(.*)>.*<\/\1>|<(.*) \/>/ 
匹配首尾空格的正则表达式：(^\s*)|(\s*$)

--不能为空 不能有空格  只能是英文字母
^\S+[a-z A-Z]$ 

--不能为空 六位以上
\S{6,} 

--不能有空格 不能非数字
^\d+$   

--只能是jpg和bmp格式
(.*)(\.jpg|\.bmp)$ 

--只能是2004-10-22格式
^\d{4}\-\d{1,2}-\d{1,2}$ 

--至少选一项
^0$         

--至少选两项
^0{2,}$        

--不能为空 二十字以上
^[\s|\S]{20,}$ 

--邮件
^\+?[a-z0-9](([-+.]|[_]+)?[a-z0-9]+)*@([a-z0-9]+(\.|\-))+[a-z]{2,6}$

--输入多个地址用逗号或空格分隔邮件
\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*([,;]\s*\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)* 

--电话号码7位或8位或前面有区号例如（022）87341628
^(\([0-9]+\))?[0-9]{7,8}$

--只能是字母、数字、下划线,必须有 @ 和.同时格式要规范的邮件
^[a-z A-Z 0-9 _]+@[a-z A-Z 0-9 _]+(\.[a-z A-Z 0-9 _]+)+(\,[a-z A-Z 0-9 _]+@[a-z A-Z 0-9 _]+(\.[a-z A-Z 0-9 _]+)+)*$
--上面表达式也可以写成这样子，更精练
^\w+@\w+(\.\w+)+(\,\w+@\w+(\.\w+)+)*$
^\w+((-\w+)|(\.\w+))*\@\w+((\.|-)\w+)*\.\w+$
