
重排序(指令重排序)

代码书写的顺序与实际执行的顺序不同，指令重排序是编译器或处理器为了提高程序性能而做的优化。

指令重排序有3种:
1)编译器优化的重排序(编译器优化，编译器在不改变单线程程序语义前提下，可以重新安排语句的执行顺序)。
2)指令级并行重排序(处理器优化，现代处理器采用了指令级并行技术来将多条指令重叠执行。如果不存在数据依赖性，
  处理器可以改变语句对应机器指令的执行顺序)。
3)内存系统的重排序(处理器优化, 处理器对读写缓存进行的优化)。

其实就是主内存、工作内存和执行引擎之间的读写操作，主要对这一块进行重排序。

as-if-serial:
无论如何重排序，程序执行的结果应该和代码顺序执行的结果一致(Java编译器和处理器都会保证Java在单
线程下遵循as-if-serial语义)。

重排序不会给单线程带来内存可见性问题。但是，在多线程中程序交错执行时，重排序可能会造成内存可见
性问题。
